.breaking .br-news { width: 24%; color: #fff; margin: 0 !important; margin-top: 5px; position: relative; }

.breaking .br-news::before { z-index: 1; content: ''; position: absolute; width: 100%; border-right: 50px solid transparent; border-top: 50px solid #0C958E; left: 0; }

.breaking .br-news span { color: #fff; position: absolute; z-index: 1; top: 50%; left: 50%; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); text-transform: uppercase; font-weight: 600; }

.breaking p { margin: 0; }

.col-news { background-color: #F0F0F0; }

.col-news .breaking { min-height: 40px; overflow: hidden; position: relative; }

.breaking-img { height: 9vh !important; }

.p-breaking p a { color: #C9D408 !important; font-weight: 600; }

#wrapp-bg { background: #F0F0F0; }

.slide-table { margin-top: 34px; }

.slide-table .bg-datatbl { background-image: url(../images/Widget-COvid-02.png); background-size: cover; background-repeat: no-repeat; }

.slide-table .single-item { margin-bottom: 30px; }

.slide-table .single-item .wr-slide { position: relative; height: 350px; }

.slide-table .single-item .wr-slide .block-cart { position: absolute; background-color: rgba(0, 0, 0, 0.7); width: 40%; height: 100%; top: 0; }

.slide-table .single-item .wr-slide .block-cart .caption-col { color: #ffffff; position: absolute; top: 50%; left: 50%; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); width: 80%; }

.slide-table .single-item .wr-slide .block-cart .caption-col h4 { font-size: 16px; font-weight: 600; }

.slide-table .single-item .wr-slide .block-cart .caption-col p { font-size: 14px; }

.slide-table .single-item .wr-slide .block-cart .caption-col span { font-size: 13px; }

.slide-table .single-item .wr-slide .block-cart a { color: #C9D408 !important; position: absolute; bottom: 20px; right: 20px; font-size: 13px; text-decoration: none; }

.slide-table .single-item .slick-dots { position: absolute; width: auto; top: 20%; left: 25px; display: block; padding: 0; margin: 0; list-style: none; text-align: center; }

.slide-table .single-item .slick-dots li { position: relative; display: inline-block; width: 20px; height: 0; padding: 0; margin-right: 20px; cursor: pointer; }

.slide-table .single-item .slick-dots li.slick-active button { background: #C9D408; }

.slide-table .single-item .slick-dots li button { font-size: 0; line-height: 0; display: block; width: 40px; height: 0px; padding: 2px; cursor: pointer; color: transparent; border: 0; outline: none; background: #bbbbbb; }

.slide-table .single-item .slick-dots li button::before { content: '' !important; }

.card-penyakit { background-color: #0C958E !important; border-radius: 5px !important; -webkit-border-radius: 5px !important; -moz-border-radius: 5px !important; -ms-border-radius: 5px !important; -o-border-radius: 5px !important; }

.card-penyakit a { color: white; text-decoration: none; }

.card-penyakit .card-body:hover { background-color: #0E817B !important; }

.card-penyakit .card-body:hover a { color: #C9D408; }

.card-penyakit .card-body:hover svg path { fill: #C9D408; }

.card-penyakit .card-body:hover svg path .cls-1, .card-penyakit .card-body:hover svg path .cls-2 { fill: #C9D408; }

.card-agenda { border-radius: 0 !important; -webkit-border-radius: 0 !important; -moz-border-radius: 0 !important; -ms-border-radius: 0 !important; -o-border-radius: 0 !important; position: relative; }

.card-agenda .lb-text { position: absolute; left: 30px; z-index: 1; }

.agenda h6 { font-size: 14px; }

.agenda h6 a { color: #0C958E !important; text-decoration: none; }

.agenda h6 :hover a { color: #0E817B !important; text-decoration: underline; }

.card-column { margin-top: 23px; }

.card-agenda .card { position: relative; border-radius: 0; -webkit-border-radius: 0; -moz-border-radius: 0; -ms-border-radius: 0; -o-border-radius: 0; }

.card-agenda .card .list-agenda { position: absolute; left: 0 !important; }

.card-catalouge { margin: 34px 0; }

.card-catalouge .text-center h4 { font-weight: 600; }

.card-catalouge .card.slick-slide { margin: 15px; }

.card-catalouge .card.slick-slide:hover .dl-fa { display: block; }

.card-catalouge .card.slick-slide .card-text { color: #6c757d; font-weight: 600; text-decoration: none; }

.card-catalouge .card.slick-slide .card-text:hover { color: #19B3AB; }

.card-catalouge .card.slick-slide .dl-fa { display: none; position: absolute; top: 50%; left: 50%; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); background: #C9D408; padding: 5px 10px; border-radius: 5px; }

.card-catalouge .card.slick-slide .dl-fa a { color: #ffffff; font-size: 14px; text-decoration: none; }

.card-catalouge a.btn.dl-btn { background-color: #19B3AB; color: #ffffff; }

.colwidth { width: 80%; }

.socmed i.fab { color: #212529; font-size: 30px; }

@media screen and (max-width: 767px) { .col-news .br-news { display: none; }
  .col-news .p-breaking { padding: 8px; }
  .col-news .p-breaking p { margin: 0; font-size: 12px; }
  .slide-table .single-item .wr-slide { height: 426px; }
  .slide-table .single-item .wr-slide .block-cart { position: relative; width: 100%; padding: 23px; height: auto; }
  .slide-table .single-item .wr-slide .block-cart .caption-col { position: relative; -webkit-transform: inherit; transform: inherit; top: 0; left: 0; }
  .slide-table .single-item .wr-slide .block-cart a { position: relative; bottom: inherit; right: inherit; }
  .agenda-column .card-agenda img.img-fluid { height: auto !important; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
