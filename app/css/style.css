body { font-family: 'Open Sans', sans-serif; }

.bg-sidebar { background-color: #F7F7F7; }

/* Slideshow container */
.slideshow-container { position: relative; }

/* Slides */
.mySlides { display: none; padding: 80px; text-align: center; }

/* Next & previous buttons */
.previous, .nexts { cursor: pointer; position: absolute; top: 50%; width: auto; margin-top: -30px; padding: 16px; color: #888; font-weight: bold; font-size: 20px; border-radius: 0 3px 3px 0; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; }

/* Position the "next button" to the right */
.nexts { position: absolute; right: 0; border-radius: 3px 0 0 3px; }

/* On hover, add a black background color with a little bit see-through */
.previous:hover, .nexts:hover { background-color: rgba(0, 0, 0, 0.8); color: white; }

/* The dot/bullet/indicator container */
.ovals-container { text-align: center; padding: 20px; }

/* The dots/bullets/indicators */
.ovals { cursor: pointer; height: 5px; width: 30px; margin: 0 2px; background-color: #bbb; border-radius: 30%; display: inline-block; -webkit-transition: background-color 0.6s ease; transition: background-color 0.6s ease; -webkit-border-radius: 30%; -moz-border-radius: 30%; -ms-border-radius: 30%; -o-border-radius: 30%; }

/* Add a background color to the active dot/circle */
.active-slide, .ovals:hover { background-color: #C9D408 !important; }

/* Add an italic font style to all quotes */
q { font-style: italic; }

/* Add a blue color to the author */
.author { color: cornflowerblue; }

#navbarSupportedContent { margin-left: 50px; }

#navbarSupportedContent li .btn-linkg { padding: 10px 12px; color: rgba(0, 0, 0, 0.5); outline: none !important; -webkit-box-shadow: none !important; box-shadow: none !important; }

#navbarSupportedContent li .btn-linkg:hover i { color: #fff; }

#navbarSupportedContent li .btn-linkg:hover span { color: #fff; }

@media screen and (min-width: 991px) { #navbarSupportedContent li .btn-linkg { display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; -ms-flex-direction: column; flex-direction: column; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; -webkit-box-align: center; -ms-flex-align: center; align-items: center; height: 100%; }
  #navbarSupportedContent li .btn-linkg::after { content: ''; border: none; } }

nav.navbar.navbar-expand-lg.navbar-light { padding: 0; }

.nav-li-active { background-color: #0E817B !important; color: white !important; }

.nav-li-active a:active { color: white; }

li.li-nav:hover { background-color: #0E817B !important; color: white !important; }

li.li-nav:hover a.nav-a-item { color: white !important; }

li.li-nav:active { background-color: #0E817B !important; color: white !important; }

li.li-nav:active a.nav-a-item:active { color: white !important; }

.brand-img { width: 90%; }

/*Menghilangkan liststyle pada tag list*/
.breadcrumbs { list-style: none; margin: 0; padding: 0; }

/*Merubah tag list menjadi inline dan membuat hruf menjad capital*/
.breadcrumb { background-color: rgba(0, 0, 0, 0); }

.breadcrumb li { display: inline; }

.breadcrumb li a { color: #646464; }

.breadcrumb li + li:before { content: ">"; color: #646464; margin-left: 5px; margin-right: 5px; }

.breadcrumb li:hover a:hover { content: ">"; color: #FFFFFF; text-decoration: none; }

@media screen and (max-width: 767px) { .navbar { padding: 23px !important; }
  .navbar #navbarSupportedContent { margin-left: 0 !important; }
  .brand-img { width: 250px; } }

.breaking .br-news { width: 24%; color: #fff; margin: 0 !important; margin-top: 5px; position: relative; }

.breaking .br-news::before { z-index: 1; content: ''; position: absolute; width: 100%; border-right: 50px solid transparent; border-top: 50px solid #0C958E; left: 0; }

.breaking .br-news span { color: #fff; position: absolute; z-index: 1; top: 50%; left: 50%; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); text-transform: uppercase; font-weight: 600; }

.breaking p { margin: 0; }

.col-news { background-color: #F0F0F0; }

.col-news .breaking { min-height: 40px; overflow: hidden; position: relative; }

.breaking-img { height: 9vh !important; }

.p-breaking p a { color: #C9D408 !important; font-weight: 600; }

.breadcumb-wrapper .breadcrumb { color: #646464; }

.breadcumb-wrapper .breadcrumb .breadcrumb-item + .breadcrumb-item::before { content: ">"; }

.breadcumb-wrapper .breadcrumb a { color: #0C958E; }

.breadcumb-wrapper .breadcrumb a:hover { color: #0C958E !important; }

#wrapp-bg { background: #F0F0F0; }

.slide-table { margin-top: 34px; }

.slide-table .bg-datatbl { background-image: url(../images/Widget-COvid-02.png); background-size: cover; background-repeat: no-repeat; }

.slide-table .single-item { margin-bottom: 30px; }

.slide-table .single-item .wr-slide { position: relative; height: 350px; }

.slide-table .single-item .wr-slide .block-cart { position: absolute; background-color: rgba(0, 0, 0, 0.7); width: 40%; height: 100%; top: 0; }

.slide-table .single-item .wr-slide .block-cart .caption-col { color: #ffffff; position: absolute; top: 50%; left: 50%; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); width: 80%; }

.slide-table .single-item .wr-slide .block-cart .caption-col h4 { font-size: 16px; font-weight: 600; }

.slide-table .single-item .wr-slide .block-cart .caption-col p { font-size: 14px; }

.slide-table .single-item .wr-slide .block-cart .caption-col span { font-size: 13px; }

.slide-table .single-item .wr-slide .block-cart a { color: #C9D408 !important; position: absolute; bottom: 20px; right: 20px; font-size: 13px; text-decoration: none; }

.slide-table .single-item .slick-dots { position: absolute; width: auto; top: 20%; left: 25px; display: block; padding: 0; margin: 0; list-style: none; text-align: center; }

.slide-table .single-item .slick-dots li { position: relative; display: inline-block; width: 20px; height: 0; padding: 0; margin-right: 20px; cursor: pointer; }

.slide-table .single-item .slick-dots li.slick-active button { background: #C9D408; }

.slide-table .single-item .slick-dots li button { font-size: 0; line-height: 0; display: block; width: 40px; height: 0px; padding: 2px; cursor: pointer; color: transparent; border: 0; outline: none; background: #bbbbbb; }

.slide-table .single-item .slick-dots li button::before { content: '' !important; }

.card-penyakit { background-color: #0C958E !important; border-radius: 5px !important; -webkit-border-radius: 5px !important; -moz-border-radius: 5px !important; -ms-border-radius: 5px !important; -o-border-radius: 5px !important; }

.card-penyakit a { color: white; text-decoration: none; }

.card-penyakit .card-body:hover { background-color: #0E817B !important; }

.card-penyakit .card-body:hover a { color: #C9D408; }

.card-penyakit .card-body:hover svg path { fill: #C9D408; }

.card-penyakit .card-body:hover svg path .cls-1, .card-penyakit .card-body:hover svg path .cls-2 { fill: #C9D408; }

.card-agenda { border-radius: 0 !important; -webkit-border-radius: 0 !important; -moz-border-radius: 0 !important; -ms-border-radius: 0 !important; -o-border-radius: 0 !important; position: relative; }

.card-agenda .lb-text { position: absolute; left: 30px; z-index: 1; }

.agenda h6 { font-size: 14px; }

.agenda h6 a { color: #0C958E !important; text-decoration: none; }

.agenda h6 :hover a { color: #0E817B !important; text-decoration: underline; }

.card-column { margin-top: 23px; }

.card-agenda .card { position: relative; border-radius: 0; -webkit-border-radius: 0; -moz-border-radius: 0; -ms-border-radius: 0; -o-border-radius: 0; }

.card-agenda .card .list-agenda { position: absolute; left: 0 !important; padding: 0 15px 0 0; }

.card-catalouge { margin: 34px 0; }

.card-catalouge .text-center h4 { font-weight: 600; }

.card-catalouge .card.slick-slide { margin: 15px; }

.card-catalouge .card.slick-slide:hover .dl-fa { display: block; }

.card-catalouge .card.slick-slide .card-text { color: #6c757d; font-weight: 600; text-decoration: none; }

.card-catalouge .card.slick-slide .card-text:hover { color: #19B3AB; }

.card-catalouge .card.slick-slide .dl-fa { display: none; position: absolute; top: 50%; left: 50%; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); background: #C9D408; padding: 5px 10px; border-radius: 5px; }

.card-catalouge .card.slick-slide .dl-fa a { color: #ffffff; font-size: 14px; text-decoration: none; }

.card-catalouge a.btn.dl-btn { background-color: #19B3AB; color: #ffffff; }

.colwidth { width: 80%; }

.socmed i.fab { color: #212529; font-size: 30px; }

@media screen and (max-width: 767px) { .col-news .br-news { display: none; }
  .col-news .p-breaking { padding: 8px; }
  .col-news .p-breaking p { margin: 0; font-size: 12px; }
  .slide-table .single-item .wr-slide { height: 426px; }
  .slide-table .single-item .wr-slide .block-cart { position: relative; width: 100%; padding: 23px; height: auto; }
  .slide-table .single-item .wr-slide .block-cart .caption-col { position: relative; -webkit-transform: inherit; transform: inherit; top: 0; left: 0; }
  .slide-table .single-item .wr-slide .block-cart a { position: relative; bottom: inherit; right: inherit; }
  .agenda-column .card-agenda img.img-fluid { height: auto !important; } }

.jumbotron-nyamuk { background-image: url(../images/8941c6c1964e516f74ad887c25d03d50.jpeg); background-repeat: no-repeat; background-size: cover; background-position-y: -185px; height: 190px; position: relative; }

.jumbotron-nyamuk:before { content: ''; position: absolute; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.7); z-index: 1; }

.jumbotron-nyamuk .col-contain { position: relative; z-index: 2; }

.jumbotron-nyamuk .col-contain .breadcrumb a { color: #ffffff; }

ul.list-group .list-group-item { border-bottom: 2px solid #E0DFDF !important; border: none; }

ul.list-group .list-group-item a { color: #1A1A1A; text-decoration: none; font-weight: bolder; }

ul.list-group .list-group-item:last-child { border-bottom: none !important; }

ul.list-group .list-group-item:hover { border-bottom: 2px solid #C9D408 !important; }

ul.list-group .list-group-item:hover a { color: #0E817B; text-decoration: none; }

@media (max-width: 924px) { .jumbotron-nyamuk { background-position-y: -110px !important; } }

@media (max-width: 762px) { .jumbotron-nyamuk { background-position-y: 0 !important; } }

.search-top-wrapper { margin-bottom: 47px; }

.search-top-wrapper .col-left select { width: 150px; margin-left: 5px; border-radius: 5px; background: transparent; padding-left: 12px; }

.search-top-wrapper .col-right .search-wrapper { position: relative; }

.search-top-wrapper .col-right .search-wrapper .input-group-text { background: transparent; position: absolute; right: 0; top: 5px; }

.search-top-wrapper .border-bar { border-bottom: 1px solid; margin: 23px 0; }

.news-list { margin-bottom: 54px; }

.news-list .group-news { margin-bottom: 34px; }

.news-list .group-news .img { position: relative; }

.news-list .group-news .img a { display: block; position: relative; }

.news-list .group-news .img a .hover { background: rgba(14, 129, 123, 0.6); position: absolute; width: 100%; height: 100%; display: none; }

.news-list .group-news .img a .hover .fas { color: #fff; display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-align: center; -ms-flex-align: center; align-items: center; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; height: 100%; width: 100%; font-size: 16px; }

.news-list .group-news .img a:hover .hover { display: block; top: 0; }

.news-list .group-news .subtitle-news { margin-bottom: 15px; font-size: 15px; }

.news-list .group-news .subtitle-news a { color: #212529; text-decoration: none; }

.news-list .group-news .atribute-col { color: #646464; font-size: 14px; }

.news-list .hd-lable .lbl { font-weight: 600; margin-right: 10px; }

.news-list .hd-lable .line-center { border-bottom: 1px solid #C9D408; }

.news-list .hd-lable.video-col { margin-top: 34px; }

.news-list .wrap-list { margin-top: 18px; border-bottom: 1px dashed; padding-bottom: 15px; }

.news-list .wrap-list .img { position: relative; }

.news-list .wrap-list .img a { display: block; position: relative; }

.news-list .wrap-list .img a .hover { background: rgba(14, 129, 123, 0.6); position: absolute; width: 100%; height: 100%; display: none; }

.news-list .wrap-list .img a .hover .fas { color: #fff; display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-align: center; -ms-flex-align: center; align-items: center; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; height: 100%; width: 100%; font-size: 16px; }

.news-list .wrap-list .img a:hover .hover { display: block; top: 0; }

.news-list .wrap-list .sidetitle { font-size: 14px; }

.news-list .wrap-list .sidetitle a { color: #212529; text-decoration: none; }

.news-list .wrap-list span { font-size: 12px; color: #646464; }

.news-list .wrap-list span.profile { background: #666666; padding: 3px 6px; color: #ffffff; border-radius: 5px; }

.news-list .wrap-list .mb-gl { margin-bottom: 30px; }

.news-list .wrap-list .vid-slider .slick-arrow { z-index: 1; }

.news-list .wrap-list .vid-slider .slick-arrow:before { background-color: rgba(0, 0, 0, 0.5); border-radius: 5px; padding: 5px; }

.news-list .wrap-list .vid-slider .slick-arrow.slick-prev { left: 50px; }

.news-list .wrap-list .vid-slider .slick-arrow.slick-next { right: 50px; }

.news-list .navigation-pagging { margin-top: 34px; }

.news-list .navigation-pagging .page-item { margin-right: 4px; }

.news-list .navigation-pagging .page-item .page-link { background-color: #646464; color: #ffffff; border-radius: 4px; border: none; }

.news-list .navigation-pagging .page-item.active .page-link { background-color: #0E817B; }

<<<<<<< HEAD
.news-list.detail-news { margin-top: 34px; }

.news-list.detail-news .wrapp-detail .title { margin-top: 34px; }

.news-list.detail-news .wrapp-detail .title h2 { font-weight: 600; }

.news-list.detail-news .wrapp-detail .title span { font-size: 12px; color: #646464; }

.news-list.detail-news .wrapp-detail .col-redaktur { margin-top: 34px; }

.news-list.detail-news .wrapp-detail .col-redaktur p { font-size: 14px; }

.news-list.detail-news .wrapp-detail .main-article { margin-bottom: 34px; }

.news-list.detail-news .wrapp-detail .main-article .wrcol-img { margin-bottom: 13px; }

.news-list.detail-news .wrapp-detail .main-article .wrcol-img .img-inner { padding-right: 23px; }

.news-list.detail-news .wrapp-detail .main-article .share-col { margin-top: 23px; }

.news-list.detail-news .wrapp-detail .main-article .share-col span { font-weight: 600; }

.news-list.detail-news .wrapp-detail .main-article .share-col i.fab { font-size: 24px; }

.news-list.detail-news .col-redaktur.btm { margin: 34px 0; }

.news-list.detail-news .col-redaktur.btm p { font-weight: 600; }

.news-list.detail-news .col-redaktur.btm p span { font-size: 12px; color: #646464; }

.news-list.detail-news .col-related-new { margin: 34px 0; }

.news-list.detail-news .col-related-new .lbl { margin-bottom: 23px; }

.news-list.detail-news .col-related-new .lbl span { font-weight: 600; }

.news-list.detail-news .col-related-new .group-news-bottom .sidetitle a { color: #212529; text-decoration: none; }

.news-list.detail-news .col-related-new .group-news-bottom span { font-size: 12px; color: #646464; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
>>>>>>> cf0b5ae9d3b7b38e79afb39d65d802c4879c412e
